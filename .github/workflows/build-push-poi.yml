name: Docker Build POI
on:
  push:
    branches: [ master ]
    paths:
      - 'apis/poi/**'
      - '.github/workflows/build-push-poi.yml'
  #pull_request:
    #branches: [ master ]
env:
  CONTAINER_REGISTRY: docker.pkg.github.com # Container Registry name
jobs:
  publish:
    name: Docker Build POI
    runs-on: ubuntu-latest
    steps:      
    - uses: actions/checkout@master
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: kumarallamraju/openhack-devops-team/poi
        username: ${{ github.actor }}
        password: ${{ secrets.githubtoken }}
        registry: docker.pkg.github.com
        tags: "latest, ${{ github.run_number }}" 
        workdir: ./apis/poi/web
  deploy:
    needs: [publish]
    name: POI App Service Deploy
    
    runs-on: ubuntu-latest
    
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Login via Docker to GH'
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.githubtoken }}
    
      - name: 'Push to Azure App Service'
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'openhackggp0ljh0poi'
          images: ${{ env.CONTAINER_REGISTRY }}/kumarallamraju/openhack-devops-team/poi:latest
          slot-name: 'staging'

#### the following code checks the health and deploys it to production slot ####
  test:
    needs: [deploy]
    runs-on: windows-latest
    steps:
    - name: Test the Staging Slot
      run: |
        $R = Invoke-WebRequest -Method Get -URI 'https://openhackggp0ljh0poi-staging.azurewebsites.net/api/healthcheck/poi'
        $timestamp = Get-Date
        $output = ""
        if ($displayUri) {
          $output = $output = '{0} | {1} | {2}' -f($timestamp, $R.StatusCode, $Uri)
          if($R.SatusCode -ne '200'){
            exit 1
          }
        } else {

        $output = '{0} | {1}' -f($timestamp, $R.StatusCode)
        }
        Write-Output $output
        Start-Sleep -Seconds 1
      shell: powershell

    
  swap:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Run CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
             az webapp deployment slot swap  -g openhackggp0ljh0rg -n openhackggp0ljh0poi --slot staging --target-slot production

      - name: Create Issue
        uses: actions/github-script@0.9.0
        with:
          script: |
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Approve POI Deploy to Production',
              assignees: [ '${{ github.actor }}' ],
              body: 'Workflow failed to commit ${{github.sha}}'
              })  
